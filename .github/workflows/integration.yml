# Continuous Integration

name: Test and Build

on:
  push:
    branches: [staging]
  pull_request:
    types: [opened, reopened]
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 22.x]

    services:
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: testdb
          SEED_USER_NAME: Admin
          SEED_USER_EMAIL: admin@waddle.uk
          SEED_PASSWORD: 123456

          PORT: 3030
          DATABASE_URL: 'postgresql://postgres:password@localhost:5432/testdb?schema=public'
          JWT_SECRET_KEY: NkM9Ci}gVsEjwfZI07gH@CEZ}?2h
          JWT_EXPIRATION_TIME: '60m'

        options: >-
          --health-cmd="pg_isready" 
          --health-interval=10s 
          --health-timeout=5s 
          --health-retries=5

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Dependencies
        run: |
          npm i
          npm ci

      - name: Set Environment Variables
        run: |
          echo "DB_HOST=127.0.0.1" >> $GITHUB_ENV
          echo "DB_PORT=5432" >> $GITHUB_ENV
          echo "DB_USER=postgres" >> $GITHUB_ENV
          echo "DB_PASSWORD=password" >> $GITHUB_ENV
          echo "DB_NAME=testdb" >> $GITHUB_ENV

      - name: Wait for PostgreSQL to be ready
        run: |
          until pg_isready -h ${{ env.DB_HOST }} -p ${{ env.DB_PORT }} -U ${{ env.DB_USER }}; do echo "Waiting for PostgreSQL to be ready..." sleep 1 done

      - name: Format Code with Prettier
        run: |
          npm run format

      - name: Lint Code with ESLint
        run: |
          npm run lint

      - name: Run E2E Tests
        run: |
          npm run test:e2e

      - name: Build the Backend Application
        run: |
          npm run build
